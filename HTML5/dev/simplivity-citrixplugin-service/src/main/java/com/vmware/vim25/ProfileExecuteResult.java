//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.06.12 at 09:16:35 AM EDT 
//


package com.vmware.vim25;



/**
 * 
 */
@SuppressWarnings("all")
public class ProfileExecuteResult
    extends DynamicData
{

    public String status;
    public HostConfigSpec configSpec;
    private final static String[] NULL_INAPPLICABLE_PATH_ARRAY = new String[ 0 ] ;
    public String[] inapplicablePath;
    private final static ProfileDeferredPolicyOptionParameter[] NULL_REQUIRE_INPUT_ARRAY = new ProfileDeferredPolicyOptionParameter[ 0 ] ;
    public ProfileDeferredPolicyOptionParameter[] requireInput;
    private final static ProfileExecuteError[] NULL_ERROR_ARRAY = new ProfileExecuteError[ 0 ] ;
    public ProfileExecuteError[] error;

    public String getStatus() {
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public HostConfigSpec getConfigSpec() {
        return configSpec;
    }

    public void setConfigSpec(HostConfigSpec configSpec) {
        this.configSpec = configSpec;
    }

    public String[] getInapplicablePath() {
        if ((inapplicablePath) == null) {
            return (NULL_INAPPLICABLE_PATH_ARRAY);
        }
        return inapplicablePath;
    }

    public void setInapplicablePath(String[] inapplicablePath) {
        this.inapplicablePath = inapplicablePath;
    }

    public ProfileDeferredPolicyOptionParameter[] getRequireInput() {
        if ((requireInput) == null) {
            return (NULL_REQUIRE_INPUT_ARRAY);
        }
        return requireInput;
    }

    public void setRequireInput(ProfileDeferredPolicyOptionParameter[] requireInput) {
        this.requireInput = requireInput;
    }

    public ProfileExecuteError[] getError() {
        if ((error) == null) {
            return (NULL_ERROR_ARRAY);
        }
        return error;
    }

    public void setError(ProfileExecuteError[] error) {
        this.error = error;
    }

}
