//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.06.12 at 09:16:35 AM EDT 
//


package com.vmware.vim25;



/**
 * 
 */
@SuppressWarnings("all")
public class GuestOsDescriptor
    extends DynamicData
{

    public String id;
    public String family;
    public String fullName;
    public int supportedMaxCPUs;
    public Integer numSupportedPhysicalSockets;
    public Integer numSupportedCoresPerSocket;
    public int supportedMinMemMB;
    public int supportedMaxMemMB;
    public int recommendedMemMB;
    public int recommendedColorDepth;
    private final static String[] NULL_SUPPORTED_DISK_CONTROLLER_LIST_ARRAY = new String[ 0 ] ;
    public String[] supportedDiskControllerList;
    public String recommendedSCSIController;
    public String recommendedDiskController;
    public int supportedNumDisks;
    public int recommendedDiskSizeMB;
    public String recommendedCdromController;
    private final static String[] NULL_SUPPORTED_ETHERNET_CARD_ARRAY = new String[ 0 ] ;
    public String[] supportedEthernetCard;
    public String recommendedEthernetCard;
    public Boolean supportsSlaveDisk;
    private final static HostCpuIdInfo[] NULL_CPU_FEATURE_MASK_ARRAY = new HostCpuIdInfo[ 0 ] ;
    public HostCpuIdInfo[] cpuFeatureMask;
    public Boolean smcRequired;
    public boolean supportsWakeOnLan;
    public Boolean supportsVMI;
    public Boolean supportsMemoryHotAdd;
    public Boolean supportsCpuHotAdd;
    public Boolean supportsCpuHotRemove;
    private final static String[] NULL_SUPPORTED_FIRMWARE_ARRAY = new String[ 0 ] ;
    public String[] supportedFirmware;
    public String recommendedFirmware;
    private final static String[] NULL_SUPPORTED_US_BCONTROLLER_LIST_ARRAY = new String[ 0 ] ;
    public String[] supportedUSBControllerList;
    public String recommendedUSBController;
    public Boolean supports3D;
    public Boolean recommended3D;
    public Boolean smcRecommended;
    public Boolean ich7mRecommended;
    public Boolean usbRecommended;
    public String supportLevel;
    public Boolean supportedForCreate;
    public IntOption vRAMSizeInKB;
    public Integer numSupportedFloppyDevices;
    private final static String[] NULL_WAKE_ON_LAN_ETHERNET_CARD_ARRAY = new String[ 0 ] ;
    public String[] wakeOnLanEthernetCard;
    public Boolean supportsPvscsiControllerForBoot;
    public Boolean diskUuidEnabled;
    public Boolean supportsHotPlugPCI;
    public Boolean supportsSecureBoot;
    public Boolean defaultSecureBoot;
    public Boolean persistentMemorySupported;
    public Long supportedMinPersistentMemoryMB;
    public Long supportedMaxPersistentMemoryMB;
    public Long recommendedPersistentMemoryMB;
    public Boolean persistentMemoryHotAddSupported;
    public Boolean persistentMemoryHotRemoveSupported;
    public Boolean persistentMemoryColdGrowthSupported;
    public Long persistentMemoryColdGrowthGranularityMB;
    public Boolean persistentMemoryHotGrowthSupported;
    public Long persistentMemoryHotGrowthGranularityMB;
    public Integer numRecommendedPhysicalSockets;
    public Integer numRecommendedCoresPerSocket;
    public BoolOption vvtdSupported;
    public BoolOption vbsSupported;
    public Boolean supportsTPM20;

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getFamily() {
        return family;
    }

    public void setFamily(String family) {
        this.family = family;
    }

    public String getFullName() {
        return fullName;
    }

    public void setFullName(String fullName) {
        this.fullName = fullName;
    }

    public int getSupportedMaxCPUs() {
        return supportedMaxCPUs;
    }

    public void setSupportedMaxCPUs(int supportedMaxCPUs) {
        this.supportedMaxCPUs = supportedMaxCPUs;
    }

    public Integer getNumSupportedPhysicalSockets() {
        return numSupportedPhysicalSockets;
    }

    public void setNumSupportedPhysicalSockets(Integer numSupportedPhysicalSockets) {
        this.numSupportedPhysicalSockets = numSupportedPhysicalSockets;
    }

    public Integer getNumSupportedCoresPerSocket() {
        return numSupportedCoresPerSocket;
    }

    public void setNumSupportedCoresPerSocket(Integer numSupportedCoresPerSocket) {
        this.numSupportedCoresPerSocket = numSupportedCoresPerSocket;
    }

    public int getSupportedMinMemMB() {
        return supportedMinMemMB;
    }

    public void setSupportedMinMemMB(int supportedMinMemMB) {
        this.supportedMinMemMB = supportedMinMemMB;
    }

    public int getSupportedMaxMemMB() {
        return supportedMaxMemMB;
    }

    public void setSupportedMaxMemMB(int supportedMaxMemMB) {
        this.supportedMaxMemMB = supportedMaxMemMB;
    }

    public int getRecommendedMemMB() {
        return recommendedMemMB;
    }

    public void setRecommendedMemMB(int recommendedMemMB) {
        this.recommendedMemMB = recommendedMemMB;
    }

    public int getRecommendedColorDepth() {
        return recommendedColorDepth;
    }

    public void setRecommendedColorDepth(int recommendedColorDepth) {
        this.recommendedColorDepth = recommendedColorDepth;
    }

    public String[] getSupportedDiskControllerList() {
        if ((supportedDiskControllerList) == null) {
            return (NULL_SUPPORTED_DISK_CONTROLLER_LIST_ARRAY);
        }
        return supportedDiskControllerList;
    }

    public void setSupportedDiskControllerList(String[] supportedDiskControllerList) {
        this.supportedDiskControllerList = supportedDiskControllerList;
    }

    public String getRecommendedSCSIController() {
        return recommendedSCSIController;
    }

    public void setRecommendedSCSIController(String recommendedSCSIController) {
        this.recommendedSCSIController = recommendedSCSIController;
    }

    public String getRecommendedDiskController() {
        return recommendedDiskController;
    }

    public void setRecommendedDiskController(String recommendedDiskController) {
        this.recommendedDiskController = recommendedDiskController;
    }

    public int getSupportedNumDisks() {
        return supportedNumDisks;
    }

    public void setSupportedNumDisks(int supportedNumDisks) {
        this.supportedNumDisks = supportedNumDisks;
    }

    public int getRecommendedDiskSizeMB() {
        return recommendedDiskSizeMB;
    }

    public void setRecommendedDiskSizeMB(int recommendedDiskSizeMB) {
        this.recommendedDiskSizeMB = recommendedDiskSizeMB;
    }

    public String getRecommendedCdromController() {
        return recommendedCdromController;
    }

    public void setRecommendedCdromController(String recommendedCdromController) {
        this.recommendedCdromController = recommendedCdromController;
    }

    public String[] getSupportedEthernetCard() {
        if ((supportedEthernetCard) == null) {
            return (NULL_SUPPORTED_ETHERNET_CARD_ARRAY);
        }
        return supportedEthernetCard;
    }

    public void setSupportedEthernetCard(String[] supportedEthernetCard) {
        this.supportedEthernetCard = supportedEthernetCard;
    }

    public String getRecommendedEthernetCard() {
        return recommendedEthernetCard;
    }

    public void setRecommendedEthernetCard(String recommendedEthernetCard) {
        this.recommendedEthernetCard = recommendedEthernetCard;
    }

    public Boolean getSupportsSlaveDisk() {
        return supportsSlaveDisk;
    }

    public void setSupportsSlaveDisk(Boolean supportsSlaveDisk) {
        this.supportsSlaveDisk = supportsSlaveDisk;
    }

    public Boolean isSupportsSlaveDisk() {
        return supportsSlaveDisk;
    }

    public HostCpuIdInfo[] getCpuFeatureMask() {
        if ((cpuFeatureMask) == null) {
            return (NULL_CPU_FEATURE_MASK_ARRAY);
        }
        return cpuFeatureMask;
    }

    public void setCpuFeatureMask(HostCpuIdInfo[] cpuFeatureMask) {
        this.cpuFeatureMask = cpuFeatureMask;
    }

    public Boolean getSmcRequired() {
        return smcRequired;
    }

    public void setSmcRequired(Boolean smcRequired) {
        this.smcRequired = smcRequired;
    }

    public Boolean isSmcRequired() {
        return smcRequired;
    }

    public boolean getSupportsWakeOnLan() {
        return supportsWakeOnLan;
    }

    public void setSupportsWakeOnLan(boolean supportsWakeOnLan) {
        this.supportsWakeOnLan = supportsWakeOnLan;
    }

    public boolean isSupportsWakeOnLan() {
        return supportsWakeOnLan;
    }

    public Boolean getSupportsVMI() {
        return supportsVMI;
    }

    public void setSupportsVMI(Boolean supportsVMI) {
        this.supportsVMI = supportsVMI;
    }

    public Boolean isSupportsVMI() {
        return supportsVMI;
    }

    public Boolean getSupportsMemoryHotAdd() {
        return supportsMemoryHotAdd;
    }

    public void setSupportsMemoryHotAdd(Boolean supportsMemoryHotAdd) {
        this.supportsMemoryHotAdd = supportsMemoryHotAdd;
    }

    public Boolean isSupportsMemoryHotAdd() {
        return supportsMemoryHotAdd;
    }

    public Boolean getSupportsCpuHotAdd() {
        return supportsCpuHotAdd;
    }

    public void setSupportsCpuHotAdd(Boolean supportsCpuHotAdd) {
        this.supportsCpuHotAdd = supportsCpuHotAdd;
    }

    public Boolean isSupportsCpuHotAdd() {
        return supportsCpuHotAdd;
    }

    public Boolean getSupportsCpuHotRemove() {
        return supportsCpuHotRemove;
    }

    public void setSupportsCpuHotRemove(Boolean supportsCpuHotRemove) {
        this.supportsCpuHotRemove = supportsCpuHotRemove;
    }

    public Boolean isSupportsCpuHotRemove() {
        return supportsCpuHotRemove;
    }

    public String[] getSupportedFirmware() {
        if ((supportedFirmware) == null) {
            return (NULL_SUPPORTED_FIRMWARE_ARRAY);
        }
        return supportedFirmware;
    }

    public void setSupportedFirmware(String[] supportedFirmware) {
        this.supportedFirmware = supportedFirmware;
    }

    public String getRecommendedFirmware() {
        return recommendedFirmware;
    }

    public void setRecommendedFirmware(String recommendedFirmware) {
        this.recommendedFirmware = recommendedFirmware;
    }

    public String[] getSupportedUSBControllerList() {
        if ((supportedUSBControllerList) == null) {
            return (NULL_SUPPORTED_US_BCONTROLLER_LIST_ARRAY);
        }
        return supportedUSBControllerList;
    }

    public void setSupportedUSBControllerList(String[] supportedUSBControllerList) {
        this.supportedUSBControllerList = supportedUSBControllerList;
    }

    public String getRecommendedUSBController() {
        return recommendedUSBController;
    }

    public void setRecommendedUSBController(String recommendedUSBController) {
        this.recommendedUSBController = recommendedUSBController;
    }

    public Boolean getSupports3D() {
        return supports3D;
    }

    public void setSupports3D(Boolean supports3D) {
        this.supports3D = supports3D;
    }

    public Boolean isSupports3D() {
        return supports3D;
    }

    public Boolean getRecommended3D() {
        return recommended3D;
    }

    public void setRecommended3D(Boolean recommended3D) {
        this.recommended3D = recommended3D;
    }

    public Boolean isRecommended3D() {
        return recommended3D;
    }

    public Boolean getSmcRecommended() {
        return smcRecommended;
    }

    public void setSmcRecommended(Boolean smcRecommended) {
        this.smcRecommended = smcRecommended;
    }

    public Boolean isSmcRecommended() {
        return smcRecommended;
    }

    public Boolean getIch7MRecommended() {
        return ich7mRecommended;
    }

    public void setIch7MRecommended(Boolean ich7mRecommended) {
        this.ich7mRecommended = ich7mRecommended;
    }

    public Boolean isIch7MRecommended() {
        return ich7mRecommended;
    }

    public Boolean getUsbRecommended() {
        return usbRecommended;
    }

    public void setUsbRecommended(Boolean usbRecommended) {
        this.usbRecommended = usbRecommended;
    }

    public Boolean isUsbRecommended() {
        return usbRecommended;
    }

    public String getSupportLevel() {
        return supportLevel;
    }

    public void setSupportLevel(String supportLevel) {
        this.supportLevel = supportLevel;
    }

    public Boolean getSupportedForCreate() {
        return supportedForCreate;
    }

    public void setSupportedForCreate(Boolean supportedForCreate) {
        this.supportedForCreate = supportedForCreate;
    }

    public Boolean isSupportedForCreate() {
        return supportedForCreate;
    }

    public IntOption getVramSizeInKB() {
        return vRAMSizeInKB;
    }

    public void setVramSizeInKB(IntOption vRAMSizeInKB) {
        this.vRAMSizeInKB = vRAMSizeInKB;
    }

    public Integer getNumSupportedFloppyDevices() {
        return numSupportedFloppyDevices;
    }

    public void setNumSupportedFloppyDevices(Integer numSupportedFloppyDevices) {
        this.numSupportedFloppyDevices = numSupportedFloppyDevices;
    }

    public String[] getWakeOnLanEthernetCard() {
        if ((wakeOnLanEthernetCard) == null) {
            return (NULL_WAKE_ON_LAN_ETHERNET_CARD_ARRAY);
        }
        return wakeOnLanEthernetCard;
    }

    public void setWakeOnLanEthernetCard(String[] wakeOnLanEthernetCard) {
        this.wakeOnLanEthernetCard = wakeOnLanEthernetCard;
    }

    public Boolean getSupportsPvscsiControllerForBoot() {
        return supportsPvscsiControllerForBoot;
    }

    public void setSupportsPvscsiControllerForBoot(Boolean supportsPvscsiControllerForBoot) {
        this.supportsPvscsiControllerForBoot = supportsPvscsiControllerForBoot;
    }

    public Boolean isSupportsPvscsiControllerForBoot() {
        return supportsPvscsiControllerForBoot;
    }

    public Boolean getDiskUuidEnabled() {
        return diskUuidEnabled;
    }

    public void setDiskUuidEnabled(Boolean diskUuidEnabled) {
        this.diskUuidEnabled = diskUuidEnabled;
    }

    public Boolean isDiskUuidEnabled() {
        return diskUuidEnabled;
    }

    public Boolean getSupportsHotPlugPCI() {
        return supportsHotPlugPCI;
    }

    public void setSupportsHotPlugPCI(Boolean supportsHotPlugPCI) {
        this.supportsHotPlugPCI = supportsHotPlugPCI;
    }

    public Boolean isSupportsHotPlugPCI() {
        return supportsHotPlugPCI;
    }

    public Boolean getSupportsSecureBoot() {
        return supportsSecureBoot;
    }

    public void setSupportsSecureBoot(Boolean supportsSecureBoot) {
        this.supportsSecureBoot = supportsSecureBoot;
    }

    public Boolean isSupportsSecureBoot() {
        return supportsSecureBoot;
    }

    public Boolean getDefaultSecureBoot() {
        return defaultSecureBoot;
    }

    public void setDefaultSecureBoot(Boolean defaultSecureBoot) {
        this.defaultSecureBoot = defaultSecureBoot;
    }

    public Boolean isDefaultSecureBoot() {
        return defaultSecureBoot;
    }

    public Boolean getPersistentMemorySupported() {
        return persistentMemorySupported;
    }

    public void setPersistentMemorySupported(Boolean persistentMemorySupported) {
        this.persistentMemorySupported = persistentMemorySupported;
    }

    public Boolean isPersistentMemorySupported() {
        return persistentMemorySupported;
    }

    public Long getSupportedMinPersistentMemoryMB() {
        return supportedMinPersistentMemoryMB;
    }

    public void setSupportedMinPersistentMemoryMB(Long supportedMinPersistentMemoryMB) {
        this.supportedMinPersistentMemoryMB = supportedMinPersistentMemoryMB;
    }

    public Long getSupportedMaxPersistentMemoryMB() {
        return supportedMaxPersistentMemoryMB;
    }

    public void setSupportedMaxPersistentMemoryMB(Long supportedMaxPersistentMemoryMB) {
        this.supportedMaxPersistentMemoryMB = supportedMaxPersistentMemoryMB;
    }

    public Long getRecommendedPersistentMemoryMB() {
        return recommendedPersistentMemoryMB;
    }

    public void setRecommendedPersistentMemoryMB(Long recommendedPersistentMemoryMB) {
        this.recommendedPersistentMemoryMB = recommendedPersistentMemoryMB;
    }

    public Boolean getPersistentMemoryHotAddSupported() {
        return persistentMemoryHotAddSupported;
    }

    public void setPersistentMemoryHotAddSupported(Boolean persistentMemoryHotAddSupported) {
        this.persistentMemoryHotAddSupported = persistentMemoryHotAddSupported;
    }

    public Boolean isPersistentMemoryHotAddSupported() {
        return persistentMemoryHotAddSupported;
    }

    public Boolean getPersistentMemoryHotRemoveSupported() {
        return persistentMemoryHotRemoveSupported;
    }

    public void setPersistentMemoryHotRemoveSupported(Boolean persistentMemoryHotRemoveSupported) {
        this.persistentMemoryHotRemoveSupported = persistentMemoryHotRemoveSupported;
    }

    public Boolean isPersistentMemoryHotRemoveSupported() {
        return persistentMemoryHotRemoveSupported;
    }

    public Boolean getPersistentMemoryColdGrowthSupported() {
        return persistentMemoryColdGrowthSupported;
    }

    public void setPersistentMemoryColdGrowthSupported(Boolean persistentMemoryColdGrowthSupported) {
        this.persistentMemoryColdGrowthSupported = persistentMemoryColdGrowthSupported;
    }

    public Boolean isPersistentMemoryColdGrowthSupported() {
        return persistentMemoryColdGrowthSupported;
    }

    public Long getPersistentMemoryColdGrowthGranularityMB() {
        return persistentMemoryColdGrowthGranularityMB;
    }

    public void setPersistentMemoryColdGrowthGranularityMB(Long persistentMemoryColdGrowthGranularityMB) {
        this.persistentMemoryColdGrowthGranularityMB = persistentMemoryColdGrowthGranularityMB;
    }

    public Boolean getPersistentMemoryHotGrowthSupported() {
        return persistentMemoryHotGrowthSupported;
    }

    public void setPersistentMemoryHotGrowthSupported(Boolean persistentMemoryHotGrowthSupported) {
        this.persistentMemoryHotGrowthSupported = persistentMemoryHotGrowthSupported;
    }

    public Boolean isPersistentMemoryHotGrowthSupported() {
        return persistentMemoryHotGrowthSupported;
    }

    public Long getPersistentMemoryHotGrowthGranularityMB() {
        return persistentMemoryHotGrowthGranularityMB;
    }

    public void setPersistentMemoryHotGrowthGranularityMB(Long persistentMemoryHotGrowthGranularityMB) {
        this.persistentMemoryHotGrowthGranularityMB = persistentMemoryHotGrowthGranularityMB;
    }

    public Integer getNumRecommendedPhysicalSockets() {
        return numRecommendedPhysicalSockets;
    }

    public void setNumRecommendedPhysicalSockets(Integer numRecommendedPhysicalSockets) {
        this.numRecommendedPhysicalSockets = numRecommendedPhysicalSockets;
    }

    public Integer getNumRecommendedCoresPerSocket() {
        return numRecommendedCoresPerSocket;
    }

    public void setNumRecommendedCoresPerSocket(Integer numRecommendedCoresPerSocket) {
        this.numRecommendedCoresPerSocket = numRecommendedCoresPerSocket;
    }

    public BoolOption getVvtdSupported() {
        return vvtdSupported;
    }

    public void setVvtdSupported(BoolOption vvtdSupported) {
        this.vvtdSupported = vvtdSupported;
    }

    public BoolOption getVbsSupported() {
        return vbsSupported;
    }

    public void setVbsSupported(BoolOption vbsSupported) {
        this.vbsSupported = vbsSupported;
    }

    public Boolean getSupportsTPM20() {
        return supportsTPM20;
    }

    public void setSupportsTPM20(Boolean supportsTPM20) {
        this.supportsTPM20 = supportsTPM20;
    }

    public Boolean isSupportsTPM20() {
        return supportsTPM20;
    }

}
