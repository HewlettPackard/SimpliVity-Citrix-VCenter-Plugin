//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.06.12 at 09:16:35 AM EDT 
//


package com.vmware.vim25;



/**
 * 
 */
@SuppressWarnings("all")
public class HbrManagerVmReplicationCapability
    extends DynamicData
{

    public ManagedObjectReference vm;
    public String supportedQuiesceMode;
    public boolean compressionSupported;
    public long maxSupportedSourceDiskCapacity;
    public Long minRpo;
    public LocalizedMethodFault fault;

    public ManagedObjectReference getVm() {
        return vm;
    }

    public void setVm(ManagedObjectReference vm) {
        this.vm = vm;
    }

    public String getSupportedQuiesceMode() {
        return supportedQuiesceMode;
    }

    public void setSupportedQuiesceMode(String supportedQuiesceMode) {
        this.supportedQuiesceMode = supportedQuiesceMode;
    }

    public boolean getCompressionSupported() {
        return compressionSupported;
    }

    public void setCompressionSupported(boolean compressionSupported) {
        this.compressionSupported = compressionSupported;
    }

    public boolean isCompressionSupported() {
        return compressionSupported;
    }

    public long getMaxSupportedSourceDiskCapacity() {
        return maxSupportedSourceDiskCapacity;
    }

    public void setMaxSupportedSourceDiskCapacity(long maxSupportedSourceDiskCapacity) {
        this.maxSupportedSourceDiskCapacity = maxSupportedSourceDiskCapacity;
    }

    public Long getMinRpo() {
        return minRpo;
    }

    public void setMinRpo(Long minRpo) {
        this.minRpo = minRpo;
    }

    public LocalizedMethodFault getFault() {
        return fault;
    }

    public void setFault(LocalizedMethodFault fault) {
        this.fault = fault;
    }

}
