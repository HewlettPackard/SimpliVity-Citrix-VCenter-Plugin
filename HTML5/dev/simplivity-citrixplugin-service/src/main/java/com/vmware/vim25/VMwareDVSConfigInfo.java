//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.06.12 at 09:16:35 AM EDT 
//


package com.vmware.vim25;



/**
 * 
 */
@SuppressWarnings("all")
public class VMwareDVSConfigInfo
    extends DVSConfigInfo
{

    private final static VMwareVspanSession[] NULL_VSPAN_SESSION_ARRAY = new VMwareVspanSession[ 0 ] ;
    public VMwareVspanSession[] vspanSession;
    private final static VMwareDVSPvlanMapEntry[] NULL_PVLAN_CONFIG_ARRAY = new VMwareDVSPvlanMapEntry[ 0 ] ;
    public VMwareDVSPvlanMapEntry[] pvlanConfig;
    public int maxMtu;
    public LinkDiscoveryProtocolConfig linkDiscoveryProtocolConfig;
    public VMwareIpfixConfig ipfixConfig;
    private final static VMwareDvsLacpGroupConfig[] NULL_LACP_GROUP_CONFIG_ARRAY = new VMwareDvsLacpGroupConfig[ 0 ] ;
    public VMwareDvsLacpGroupConfig[] lacpGroupConfig;
    public String lacpApiVersion;
    public String multicastFilteringMode;

    public VMwareVspanSession[] getVspanSession() {
        if ((vspanSession) == null) {
            return (NULL_VSPAN_SESSION_ARRAY);
        }
        return vspanSession;
    }

    public void setVspanSession(VMwareVspanSession[] vspanSession) {
        this.vspanSession = vspanSession;
    }

    public VMwareDVSPvlanMapEntry[] getPvlanConfig() {
        if ((pvlanConfig) == null) {
            return (NULL_PVLAN_CONFIG_ARRAY);
        }
        return pvlanConfig;
    }

    public void setPvlanConfig(VMwareDVSPvlanMapEntry[] pvlanConfig) {
        this.pvlanConfig = pvlanConfig;
    }

    public int getMaxMtu() {
        return maxMtu;
    }

    public void setMaxMtu(int maxMtu) {
        this.maxMtu = maxMtu;
    }

    public LinkDiscoveryProtocolConfig getLinkDiscoveryProtocolConfig() {
        return linkDiscoveryProtocolConfig;
    }

    public void setLinkDiscoveryProtocolConfig(LinkDiscoveryProtocolConfig linkDiscoveryProtocolConfig) {
        this.linkDiscoveryProtocolConfig = linkDiscoveryProtocolConfig;
    }

    public VMwareIpfixConfig getIpfixConfig() {
        return ipfixConfig;
    }

    public void setIpfixConfig(VMwareIpfixConfig ipfixConfig) {
        this.ipfixConfig = ipfixConfig;
    }

    public VMwareDvsLacpGroupConfig[] getLacpGroupConfig() {
        if ((lacpGroupConfig) == null) {
            return (NULL_LACP_GROUP_CONFIG_ARRAY);
        }
        return lacpGroupConfig;
    }

    public void setLacpGroupConfig(VMwareDvsLacpGroupConfig[] lacpGroupConfig) {
        this.lacpGroupConfig = lacpGroupConfig;
    }

    public String getLacpApiVersion() {
        return lacpApiVersion;
    }

    public void setLacpApiVersion(String lacpApiVersion) {
        this.lacpApiVersion = lacpApiVersion;
    }

    public String getMulticastFilteringMode() {
        return multicastFilteringMode;
    }

    public void setMulticastFilteringMode(String multicastFilteringMode) {
        this.multicastFilteringMode = multicastFilteringMode;
    }

}
