//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.06.12 at 09:16:35 AM EDT 
//


package com.vmware.vim25;



/**
 * 
 */
@SuppressWarnings("all")
public class VirtualDiskSeSparseBackingOption
    extends VirtualDeviceFileBackingOption
{

    public ChoiceOption diskMode;
    public BoolOption writeThrough;
    public boolean growable;
    public boolean hotGrowable;
    public boolean uuid;
    private final static VirtualDiskDeltaDiskFormatsSupported[] NULL_DELTA_DISK_FORMATS_SUPPORTED_ARRAY = new VirtualDiskDeltaDiskFormatsSupported[ 0 ] ;
    public VirtualDiskDeltaDiskFormatsSupported[] deltaDiskFormatsSupported;

    public ChoiceOption getDiskMode() {
        return diskMode;
    }

    public void setDiskMode(ChoiceOption diskMode) {
        this.diskMode = diskMode;
    }

    public BoolOption getWriteThrough() {
        return writeThrough;
    }

    public void setWriteThrough(BoolOption writeThrough) {
        this.writeThrough = writeThrough;
    }

    public boolean getGrowable() {
        return growable;
    }

    public void setGrowable(boolean growable) {
        this.growable = growable;
    }

    public boolean isGrowable() {
        return growable;
    }

    public boolean getHotGrowable() {
        return hotGrowable;
    }

    public void setHotGrowable(boolean hotGrowable) {
        this.hotGrowable = hotGrowable;
    }

    public boolean isHotGrowable() {
        return hotGrowable;
    }

    public boolean getUuid() {
        return uuid;
    }

    public void setUuid(boolean uuid) {
        this.uuid = uuid;
    }

    public boolean isUuid() {
        return uuid;
    }

    public VirtualDiskDeltaDiskFormatsSupported[] getDeltaDiskFormatsSupported() {
        if ((deltaDiskFormatsSupported) == null) {
            return (NULL_DELTA_DISK_FORMATS_SUPPORTED_ARRAY);
        }
        return deltaDiskFormatsSupported;
    }

    public void setDeltaDiskFormatsSupported(VirtualDiskDeltaDiskFormatsSupported[] deltaDiskFormatsSupported) {
        this.deltaDiskFormatsSupported = deltaDiskFormatsSupported;
    }

}
